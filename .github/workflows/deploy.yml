name: Deploy Application

on:
  push:
    branches:
      - main

jobs:
  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create .env file
      run: |
        echo "FASTAPI_DB_URL=${{ secrets.FASTAPI_DB_URL }}" >> .env
        echo "FASTAPI_REDIS_URL=${{ secrets.FASTAPI_REDIS_URL }}" >> .env
        echo "FASTAPI_RABBITMQ_BROCKER=${{ secrets.FASTAPI_RABBITMQ_BROCKER }}" >> .env
        echo "FASTAPI_RABBITMQ_BACKEND=${{ secrets.FASTAPI_RABBITMQ_BACKEND }}" >> .env
        echo "FASTAPI_OPENAI_API=${{ secrets.FASTAPI_OPENAI_API }}" >> .env
        echo "FASTAPI_XML_URL=${{ secrets.FASTAPI_XML_URL }}" >> .env
        cp .env src/.env

    - name: Deploy to Server
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        port: 22
        script: |
          set -e
          cd ${{ secrets.DEPLOY_PATH }}
          if [ ! -d ".git" ]; then
            git clone git@github.com:triplesix6x/sales-parser.git .
          fi
          git pull origin main
          cp $GITHUB_WORKSPACE/.env .env
          cp $GITHUB_WORKSPACE/src/.env src/.env
          docker-compose down
          docker-compose up --build -d
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create .env file
      run: |
        echo "FASTAPI_DB_URL=${{ secrets.FASTAPI_DB_URL }}" >> .env
        echo "FASTAPI_REDIS_URL=${{ secrets.FASTAPI_REDIS_URL }}" >> .env
        echo "FASTAPI_RABBITMQ_BROCKER=${{ secrets.FASTAPI_RABBITMQ_BROCKER }}" >> .env
        echo "FASTAPI_RABBITMQ_BACKEND=${{ secrets.FASTAPI_RABBITMQ_BACKEND }}" >> .env
        echo "FASTAPI_OPENAI_API=${{ secrets.FASTAPI_OPENAI_API }}" >> .env
        echo "FASTAPI_XML_URL=${{ secrets.FASTAPI_XML_URL }}" >> .env
        cp .env src/.env

    - name: Python Setup
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt
    - name: Run Tests
      run: |
        pip install pytest pytest-asyncio
        pytest -v

