version: "3.9"

services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  api:
    build:
      context: ./src
      dockerfile: Dockerfile
    container_name: api_container
    command: bash -c "chmod +x /project/run.sh && /bin/bash -c "/project/run.sh""
    ports:
      - "6099:6099"
    networks:
      - app_network
    depends_on:
      - postgres
  
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app_network
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=false
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - app_network 

  logstash:
    image: docker.elastic.co/logstash/logstash:8.10.2
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch
    networks:
      - app_network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - app_network


volumes:
  postgres_data:
  pgadmin_data:
  esdata:
    driver: local

networks:
  app_network:
    driver: bridge

